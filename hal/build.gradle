apply plugin: 'cpp'

libraries {
    hal {}
}

sources {
    hal {
        cpp {
            source {
                srcDirs = ["lib/Athena", "lib/Athena/FRC_FPGA_ChipObject"]
                includes = ["**/*.cpp"]
            }
            exportedHeaders {
                srcDirs = ["include", "lib/Athena", "lib/Athena/FRC_FPGA_ChipObject"]
            }
        }
    }
}

model {
    repositories {
        libs(PrebuiltLibraries) { libs ->
            // Loops through all .so files in ../ni-libraries and includes them for linking
            def niLibraries = fileTree(dir: "../ni-libraries")
            niLibraries.include '*.so'
            niLibraries.each { niLib ->
                libs.create(niLib) {
                    binaries.withType(SharedLibraryBinary) {
                        sharedLibraryFile = niLib.path
                    }
                }
            }
        }
    }
}
