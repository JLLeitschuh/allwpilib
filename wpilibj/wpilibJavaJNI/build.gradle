apply plugin: 'cpp'

// TODO: This is currently broken, as there doesn't seem to be an archived version of 8u6
def jdkDownloadSite = 'http://www.oracle.com/technetwork/java/javase/downloads/jdk8-arm-downloads-2187472.html'
def jdkFolder = 'jdk-linux-arm-vfp-sflt'
def jdkVersion = 'jdk1.8.0_06'
def jdkLocation = System.getProperty("user.home") + File.separator + jdkFolder + File.separator + jdkVersion
def niLibraries = fileTree(dir: '../../ni-libraries')
def jarFile = 'wpilibJavaJNI'
niLibraries.include '*.so'
niLibraries.exclude '*libwpi*'

evaluationDependsOn(':wpilibj:wpilibJavaDevices')

model {
    components {
        wpilibJavaJNI(NativeLibrarySpec) {
            binaries.all {
                tasks.withType(CppCompile) {
                    // Ensure the jni headers are generated and put in the build directory
                    dependsOn project(':wpilibj:wpilibJavaDevices').jniHeaders
                    // Ensure the user has the JDK installed
                    dependsOn verifyJre
                    dependsOn addNiLibraryLinks
                }
            }
            sources {
                cpp {
                    source {
                        srcDirs = ['lib']
                        includes = ['**/*.cpp']
                    }
                    exportedHeaders {
                        // JDK is included for jni.h. We also need the arm-linux specific headers. This does not need to change
                        // when compiling on Windows
                        // The JNI headers are put into the build/include directory by the jniHeaders task on wpilibJavaDevices
                        def includeLocation = jdkLocation + File.separator + 'include'
                        srcDirs = ["include", "build/include", includeLocation, includeLocation + File.separator + "linux"]
                    }
                    lib project: ':hal', library: 'HALAthena', linkage: 'static'
                }
            }
        }
    }
}

task verifyJre {
    description 'Verifies that the ARM JDK is downloaded in the user directory'
    doLast {
        def jdkFile = new File(jdkLocation)
        if (!jdkFile.exists() && !jdkFile.isDirectory()) {
            def errorMessage = 'The ARM JDK was not found. Please install the JDK in the following location:' +
                    System.lineSeparator() + jdkLocation +
                    System.lineSeparator() + 'You can download the JDK here:' +
                    System.lineSeparator() + jdkDownloadSite
            throw new GradleException(errorMessage)
        }
    }
}

// Creates the jni jar, putting the .so in the correct location. This needs to be named jar, so that the
// buildWPILibJ project finds the task along with all the other projects
task jar(type: Jar) {
    description 'Puts the produced shared library into a jar in the linux/ directory'
    dependsOn { wpilibJavaJNISharedLibrary }
    destinationDir = buildDir
    appendix = jarFile
    binaries.withType(SharedLibraryBinarySpec) { bin ->
        from file(bin.sharedLibraryFile)
        into 'linux-arm'
    }
}

clean {
    delete file(buildDir.path + File.pathSeparator + jarFile + '.jar')
}
