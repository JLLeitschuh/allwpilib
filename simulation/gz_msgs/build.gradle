//imports
import org.apache.tools.ant.filters.ReplaceTokens

//plugins
// proto files are build by the protobuf plugin
apply plugin: 'protobuf'
// used for build the share library gz_msgs.so
apply plugin: 'cpp'

buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.andrewkroh.gradle:gradle-protobuf-plugin:0.4.0'
  } 
}

repositories {
  mavenCentral()
}

//describe how to build the gz_msgs library
model {
  components {
    gz_msgs(NativeLibrarySpec){
      sources {
        cpp {
          source  {
            srcDirs 'build/generated/cpp'
            include '**/*.cc'
          }
          exportedHeaders {
            srcDirs 'build/generated/cpp'
            include '**/*.h'
          }
        }
      }
    }
  }
}

tasks.whenTaskAdded { task ->
  if (task.name == "gz_msgsSharedLibrary"){
    task.finalizedBy "msgs_header"
  }
}

// copy msg.h.in and replace token
// this file is included by all the wpilibC++Sim files
// example: https://docs.gradle.org/current/userguide/userguide_single.html#filterOnCopy
task msgs_header(type: Copy) {
  from 'src/msgs.h.in'
  into 'build/generated/'
  //get all the generated header files and include them in msgs.h
  def gz_msgs_headers = fileTree('build/generated/cpp/').include('*.h')
  def gz_msgs_includes = ""
  gz_msgs_headers.each {
    gz_msgs_includes += "#include <$it>\n"
  }
  //place into msgs.h
  filter(ReplaceTokens, tokens: [gz_msgs_includes: gz_msgs_includes])
  //rename the file to remove the .in
  rename( /(.+)\.in/ , '$1')
}
msgs_header.dependsOn 'compileProto'
