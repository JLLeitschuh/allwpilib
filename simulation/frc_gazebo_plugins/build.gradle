apply plugin: 'cpp'

//windows specific defines
String OS = System.getProperty('os.name').toLowerCase();
if (OS.contains("windows")){
  // defines things like M_PI
  define("_USE_MATH_DEFINES")
  define("NOMINMAX")
  define("WIN32_LEAN_AND_MEAN")
}

def plugins = ['clock', 'dc_motor', 'encoder', 'gyro', 'limit_switch', 'pneumatic_piston', 'potentiometer', 'rangefinder', 'servo']

//iterate over each plugin
model {
  components {
    plugins.each {
      "gz_$it"(NativeLibrarySpec){
        sources {
          cpp {
            source {
              srcDirs '../gz_msgs/build/generated'
              include 'msgs.h'
            }
            exportedHeaders {
              srcDirs '/usr/include/gazebo-5.1', '/usr/include/sdformat-2.3'
              include '**/*.h'
            }
          }
        }
      }
    }
  }
}

task copySharedPlugins(type: Copy){
  plugins.each {
    from "build/binaries/gz_${it}SharedLibrary/"
    into "build/binaries/plugins"
  }
}

tasks.whenTaskAdded { task ->
    if (task.name.contains('gz')) {
        task.dependsOn ':simulation:gz_msgs:build'
    }
}
